{"version":3,"sources":["hooks/useIpInfo.js","static/other-users.js","components/marker-popup.jsx","components/map.jsx","static/api-keys.js","components/map-theme-toggler.jsx","components/app.jsx","index.jsx"],"names":["useDataApi","initUrl","initData","useState","data","setData","url","isLoading","setIsLoading","isError","setIsError","useEffect","a","fetch","response","json","fetchData","otherUsersCoors","lat","long","id","latitude","longitude","info","useStyles","makeStyles","marker","transform","color","currentUserMarker","position","cursor","outline","fill","otherUserMarker","popup","maxWidth","fontSize","margin","MarkerAndPopup","isCurrent","styles","showPopup","setShowPopup","key","offsetLeft","offsetTop","className","onClick","onKeyDown","role","tabIndex","onClose","closeOnClick","closeButton","anchor","defaultProps","geolocateStyle","top","left","Map","mapTheme","width","height","zoom","bearing","pitch","viewport","setViewport","otherUsers","console","log","onViewportChange","mapboxApiAccessToken","mapStyle","map","userData","style","positionOptions","enableHighAccuracy","trackUserLocation","type","viewportCurrent","transitionDuration","transitionInterpolator","FlyToInterpolator","transitionEasing","easeCubic","place","city","country","MapThemeToggler","buttonText","toggleTheme","App","isDataReady","setIsDataReady","coors","setCoors","setPlace","setButtonText","setMapTheme","loc","split","display","justifyContent","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8fae91bf.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { useEffect } from 'react';\nconst useDataApi = (initUrl, initData) => {\n  const [data, setData] = useState(initData);\n  const [url, setUrl] = useState(initUrl);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsError(false);\n      setIsLoading(true);\n      try {\n        const response = await fetch(url);\n        const json = await response.json();\n        setData(json);\n      } catch (e) {\n        setIsError(true);\n      }\n      setIsLoading(false);\n    };\n    fetchData();\n  }, [url]);\n  return { data, isLoading, isError };\n};\nexport default useDataApi;\n","const otherUsersCoors = (lat, long) => {\n  return [\n    // 1\n    {\n      id: 1,\n      latitude: (lat + 0.01) % 90,\n      longitude: long % 180,\n      info: '1',\n    },\n    // 2\n    {\n      id: 2,\n      latitude: (lat - 0.01) % 90,\n      longitude: long % 180,\n      info: '2',\n    },\n    // 3\n    {\n      id: 3,\n      latitude: (lat + 0.011) % 90,\n      longitude: long % 180,\n      info: '3',\n    },\n    // 4\n    {\n      id: 4,\n      latitude: (lat + 0.012) % 90,\n      longitude: long % 180,\n      info: '4',\n    },\n    // 5\n    {\n      id: 5,\n      latitude: (lat + 0.05) % 90,\n      longitude: (long - 0.05) % 180,\n      info: '5',\n    },\n    // 6\n    {\n      id: 6,\n      latitude: (lat + 0.06) % 90,\n      longitude: (long - 0.05) % 180,\n      info: '6',\n    },\n    // 7\n    {\n      id: 7,\n      latitude: (lat - 0.07) % 90,\n      longitude: long % 180,\n      info: '7',\n    },\n    // 8\n    {\n      id: 8,\n      latitude: (lat - 0.071) % 90,\n      longitude: long % 180,\n      info: '8',\n    },\n    // 9\n    {\n      id: 9,\n      latitude: (lat + 0.07) % 90,\n      longitude: (long + 0.01) % 180,\n      info: '9',\n    },\n    // 10\n    {\n      id: 10,\n      latitude: (lat + 0.07) % 90,\n      longitude: (long + 0.011) % 180,\n      info: '10',\n    },\n  ];\n};\n\nexport default otherUsersCoors;\n","import React, { useState } from 'react';\nimport { Marker, Popup } from 'react-map-gl';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles({\n  marker: {\n    transform: 'translate(0, 0)',\n    color: 'red',\n  },\n  currentUserMarker: {\n    position: 'relative',\n    cursor: 'pointer',\n    outline: 'none',\n    '& svg': {\n      fill: '#ff5555',\n    },\n  },\n  otherUserMarker: {\n    position: 'relative',\n    cursor: 'pointer',\n    outline: 'none',\n    '& svg': {\n      fill: '#5555ff',\n    },\n  },\n\n  popup: {\n    maxWidth: '70%',\n    transform: 'none',\n\n    '& h2': {\n      fontSize: 14,\n      margin: '0 0 10px 0',\n    },\n\n    '& p': {\n      fontSize: 12,\n      margin: 0,\n    },\n  },\n});\n\nconst MarkerAndPopup = ({ lat, long, id, info, isCurrent }) => {\n  const styles = useStyles();\n  const [showPopup, setShowPopup] = useState(true);\n\n  return (\n    <>\n      <Marker\n        key={id}\n        longitude={long}\n        latitude={lat}\n        offsetLeft={-13}\n        offsetTop={5}\n      >\n        <div\n          className={\n            isCurrent ? styles.currentUserMarker : styles.otherUserMarker\n          }\n          onClick={() => setShowPopup(true)}\n          onKeyDown={() => setShowPopup(true)}\n          role=\"button\"\n          tabIndex={0}\n        >\n          <RoomIcon />\n        </div>\n      </Marker>\n      {showPopup && (\n        <Popup\n          offsetLeft={0}\n          offsetTop={0}\n          latitude={lat}\n          longitude={long}\n          onClose={() => setShowPopup(false)}\n          closeOnClick={false}\n          closeButton\n          anchor=\"right\"\n          className={styles.popup}\n        >\n          <div>\n            <h2>{id}</h2>\n            <p>{info}</p>\n          </div>\n        </Popup>\n      )}\n    </>\n  );\n};\n\nexport default MarkerAndPopup;\n\nMarkerAndPopup.defaultProps = {\n  lat: 0,\n  long: 0,\n  id: 0,\n  info: '',\n  isCurrent: false,\n};\n\nMarkerAndPopup.propTypes = {\n  lat: PropTypes.number,\n  long: PropTypes.number,\n  id: PropTypes.number,\n  info: PropTypes.string,\n  isCurrent: PropTypes.bool,\n};\n","import React, { useState } from 'react';\nimport MapGL, { FlyToInterpolator, GeolocateControl } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { easeCubic } from 'd3-ease';\nimport PropTypes from 'prop-types';\n\nimport { MAPBOX_TOKEN } from '../static/api-keys';\nimport otherUsersCoors from '../static/other-users';\nimport MarkerAndPopup from './marker-popup';\n\nconst geolocateStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  margin: 10,\n};\n\nconst Map = ({ lat, long, mapTheme }) => {\n  const [viewport, setViewport] = useState({\n    width: '100%',\n    height: '400px',\n    latitude: lat,\n    longitude: long,\n    zoom: 8,\n    bearing: 0, // азимут\n    pitch: 0,\n  });\n\n  const gotoCurrentPlace = () => {\n    console.log('viewPort: ', viewport);\n    const viewportCurrent = {\n      ...viewport,\n      longitude: long,\n      latitude: lat,\n      zoom: 8,\n      transitionDuration: 'auto',\n      transitionInterpolator: new FlyToInterpolator(),\n      transitionEasing: easeCubic,\n    };\n    setViewport(viewportCurrent);\n  };\n\n  const otherUsers = otherUsersCoors(lat, long);\n  console.log(lat, long);\n  console.log(viewport.width);\n  return (\n    <>\n      <MapGL\n        {...viewport}\n        onViewportChange={setViewport}\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n        mapStyle={`mapbox://styles/mapbox/${mapTheme}`}\n      >\n        <MarkerAndPopup\n          lat={lat}\n          long={long}\n          id={0}\n          info=\"Current User\"\n          isCurrent\n        />\n        {otherUsers.map(userData => {\n          const { id, latitude, longitude, info } = userData;\n          return (\n            <MarkerAndPopup\n              key={id}\n              lat={latitude}\n              long={longitude}\n              id={id}\n              info={info}\n              isCurrent={false}\n            />\n          );\n        })}\n\n        <GeolocateControl\n          style={geolocateStyle}\n          positionOptions={{ enableHighAccuracy: true }}\n          trackUserLocation\n        />\n      </MapGL>\n      <button type=\"button\" onClick={gotoCurrentPlace}>\n        Back to current place\n      </button>\n    </>\n  );\n};\n\nexport default Map;\n\nMap.defaultProps = {\n  lat: 0,\n  long: 0,\n  mapTheme: 'light',\n  place: { city: '', country: '' },\n};\n\nMap.propTypes = {\n  lat: PropTypes.number,\n  long: PropTypes.number,\n  mapTheme: PropTypes.string,\n  place: PropTypes.shape({\n    city: PropTypes.string,\n    country: PropTypes.string,\n  }),\n};\n","export const MAPBOX_TOKEN =\n  'pk.eyJ1IjoiYXlrdWxpIiwiYSI6ImNrM2pybXF5MjA0OWczcG14ZzdxNXBlYmMifQ.tYv6CcePP02kbiXAJ-p_Mw';\n\nexport const IPINFO_TOKEN = 'abb04b3b63728f';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// TODO переделать button на select и сделать выбр карт побольше  streets light dark outdoors satellite\nconst MapThemeToggler = ({ buttonText, toggleTheme }) => {\n  return (\n    <>\n      <button type=\"button\" onClick={toggleTheme}>\n        Switch to {buttonText}\n      </button>\n    </>\n  );\n};\n\nexport default MapThemeToggler;\n\nMapThemeToggler.defaultProps = {\n  buttonText: 'light',\n  toggleTheme: () => {},\n};\n\nMapThemeToggler.propTypes = {\n  buttonText: PropTypes.string,\n  toggleTheme: PropTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\n\nimport useDataApi from '../hooks/useIpInfo';\nimport { IPINFO_TOKEN } from '../static/api-keys';\nimport Map from './map';\nimport MapThemeToggler from './map-theme-toggler';\n\nconst App = () => {\n  const [isDataReady, setIsDataReady] = useState(false);\n  const [coors, setCoors] = useState(null);\n  const [place, setPlace] = useState({ city: '', country: '' });\n  const { data, isLoading, isError } = useDataApi(\n    `https://ipinfo.io?token=${IPINFO_TOKEN}`,\n    null\n  );\n  const [buttonText, setButtonText] = useState('dark');\n  const [mapTheme, setMapTheme] = useState('streets-v11');\n\n  useEffect(() => {\n    if (data !== null) {\n      setIsDataReady(true);\n      const { city, country, loc } = data;\n      setCoors(loc.split(','));\n      setPlace({ city, country });\n    }\n  }, [data]);\n\n  const toggleTheme = () => {\n    setButtonText(buttonText === 'light' ? 'dark' : 'light');\n    setMapTheme(mapTheme === 'dark-v9' ? 'streets-v11' : 'dark-v9');\n  };\n\n  return (\n    <>\n      {isError && <div>Something went wrong...</div>}\n      {isLoading ? <div>Loading current coordinates...</div> : null}\n      {isDataReady ? (\n        <>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <div>\n              <h5>\n                {place.city},{place.country}\n              </h5>\n              <p>\n                lat ={coors[0]}, long ={coors[1]}\n              </p>\n            </div>\n            <div>\n              <MapThemeToggler\n                buttonText={buttonText}\n                toggleTheme={toggleTheme}\n              />\n            </div>\n          </div>\n          <Map\n            lat={Number(coors[0])}\n            long={Number(coors[1])}\n            mapTheme={mapTheme}\n            place={place}\n          />\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}